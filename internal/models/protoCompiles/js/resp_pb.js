// source: resp.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var blogArticle_pb = require('./blogArticle_pb.js');
goog.object.extend(proto, blogArticle_pb);
var errors_pb = require('./errors_pb.js');
goog.object.extend(proto, errors_pb);
var blogType_pb = require('./blogType_pb.js');
goog.object.extend(proto, blogType_pb);
var blogComment_pb = require('./blogComment_pb.js');
goog.object.extend(proto, blogComment_pb);
var blogChatRecord_pb = require('./blogChatRecord_pb.js');
goog.object.extend(proto, blogChatRecord_pb);
goog.exportSymbol('proto.blog_chat_records', null, global);
goog.exportSymbol('proto.blog_comments', null, global);
goog.exportSymbol('proto.blog_detail', null, global);
goog.exportSymbol('proto.blog_list', null, global);
goog.exportSymbol('proto.blog_rooms', null, global);
goog.exportSymbol('proto.blog_types', null, global);
goog.exportSymbol('proto.file_content', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blog_list = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blog_list.repeatedFields_, null);
};
goog.inherits(proto.blog_list, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blog_list.displayName = 'proto.blog_list';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blog_detail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blog_detail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blog_detail.displayName = 'proto.blog_detail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blog_types = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blog_types.repeatedFields_, null);
};
goog.inherits(proto.blog_types, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blog_types.displayName = 'proto.blog_types';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blog_comments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blog_comments.repeatedFields_, null);
};
goog.inherits(proto.blog_comments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blog_comments.displayName = 'proto.blog_comments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.file_content = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.file_content, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.file_content.displayName = 'proto.file_content';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blog_chat_records = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blog_chat_records.repeatedFields_, null);
};
goog.inherits(proto.blog_chat_records, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blog_chat_records.displayName = 'proto.blog_chat_records';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blog_rooms = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blog_rooms.repeatedFields_, null);
};
goog.inherits(proto.blog_rooms, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blog_rooms.displayName = 'proto.blog_rooms';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blog_list.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blog_list.prototype.toObject = function(opt_includeInstance) {
  return proto.blog_list.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blog_list} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog_list.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    msg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    blogArticleListList: jspb.Message.toObjectList(msg.getBlogArticleListList(),
    blogArticle_pb.blog_article.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blog_list}
 */
proto.blog_list.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blog_list;
  return proto.blog_list.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blog_list} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blog_list}
 */
proto.blog_list.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.error_codes} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 3:
      var value = new blogArticle_pb.blog_article;
      reader.readMessage(value,blogArticle_pb.blog_article.deserializeBinaryFromReader);
      msg.addBlogArticleList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blog_list.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blog_list.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blog_list} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog_list.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBlogArticleListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      blogArticle_pb.blog_article.serializeBinaryToWriter
    );
  }
};


/**
 * optional error_codes code = 1;
 * @return {!proto.error_codes}
 */
proto.blog_list.prototype.getCode = function() {
  return /** @type {!proto.error_codes} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.error_codes} value
 * @return {!proto.blog_list} returns this
 */
proto.blog_list.prototype.setCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string msg = 2;
 * @return {string}
 */
proto.blog_list.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blog_list} returns this
 */
proto.blog_list.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated blog_article blog_article_list = 3;
 * @return {!Array<!proto.blog_article>}
 */
proto.blog_list.prototype.getBlogArticleListList = function() {
  return /** @type{!Array<!proto.blog_article>} */ (
    jspb.Message.getRepeatedWrapperField(this, blogArticle_pb.blog_article, 3));
};


/**
 * @param {!Array<!proto.blog_article>} value
 * @return {!proto.blog_list} returns this
*/
proto.blog_list.prototype.setBlogArticleListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.blog_article=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blog_article}
 */
proto.blog_list.prototype.addBlogArticleList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.blog_article, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blog_list} returns this
 */
proto.blog_list.prototype.clearBlogArticleListList = function() {
  return this.setBlogArticleListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blog_detail.prototype.toObject = function(opt_includeInstance) {
  return proto.blog_detail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blog_detail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog_detail.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    msg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    currentArticle: (f = msg.getCurrentArticle()) && blogArticle_pb.blog_article.toObject(includeInstance, f),
    nextArticle: (f = msg.getNextArticle()) && blogArticle_pb.blog_article.toObject(includeInstance, f),
    prevArticle: (f = msg.getPrevArticle()) && blogArticle_pb.blog_article.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blog_detail}
 */
proto.blog_detail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blog_detail;
  return proto.blog_detail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blog_detail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blog_detail}
 */
proto.blog_detail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.error_codes} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 3:
      var value = new blogArticle_pb.blog_article;
      reader.readMessage(value,blogArticle_pb.blog_article.deserializeBinaryFromReader);
      msg.setCurrentArticle(value);
      break;
    case 4:
      var value = new blogArticle_pb.blog_article;
      reader.readMessage(value,blogArticle_pb.blog_article.deserializeBinaryFromReader);
      msg.setNextArticle(value);
      break;
    case 5:
      var value = new blogArticle_pb.blog_article;
      reader.readMessage(value,blogArticle_pb.blog_article.deserializeBinaryFromReader);
      msg.setPrevArticle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blog_detail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blog_detail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blog_detail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog_detail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCurrentArticle();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      blogArticle_pb.blog_article.serializeBinaryToWriter
    );
  }
  f = message.getNextArticle();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      blogArticle_pb.blog_article.serializeBinaryToWriter
    );
  }
  f = message.getPrevArticle();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      blogArticle_pb.blog_article.serializeBinaryToWriter
    );
  }
};


/**
 * optional error_codes code = 1;
 * @return {!proto.error_codes}
 */
proto.blog_detail.prototype.getCode = function() {
  return /** @type {!proto.error_codes} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.error_codes} value
 * @return {!proto.blog_detail} returns this
 */
proto.blog_detail.prototype.setCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string msg = 2;
 * @return {string}
 */
proto.blog_detail.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blog_detail} returns this
 */
proto.blog_detail.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional blog_article current_article = 3;
 * @return {?proto.blog_article}
 */
proto.blog_detail.prototype.getCurrentArticle = function() {
  return /** @type{?proto.blog_article} */ (
    jspb.Message.getWrapperField(this, blogArticle_pb.blog_article, 3));
};


/**
 * @param {?proto.blog_article|undefined} value
 * @return {!proto.blog_detail} returns this
*/
proto.blog_detail.prototype.setCurrentArticle = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blog_detail} returns this
 */
proto.blog_detail.prototype.clearCurrentArticle = function() {
  return this.setCurrentArticle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blog_detail.prototype.hasCurrentArticle = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional blog_article next_article = 4;
 * @return {?proto.blog_article}
 */
proto.blog_detail.prototype.getNextArticle = function() {
  return /** @type{?proto.blog_article} */ (
    jspb.Message.getWrapperField(this, blogArticle_pb.blog_article, 4));
};


/**
 * @param {?proto.blog_article|undefined} value
 * @return {!proto.blog_detail} returns this
*/
proto.blog_detail.prototype.setNextArticle = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blog_detail} returns this
 */
proto.blog_detail.prototype.clearNextArticle = function() {
  return this.setNextArticle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blog_detail.prototype.hasNextArticle = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional blog_article prev_article = 5;
 * @return {?proto.blog_article}
 */
proto.blog_detail.prototype.getPrevArticle = function() {
  return /** @type{?proto.blog_article} */ (
    jspb.Message.getWrapperField(this, blogArticle_pb.blog_article, 5));
};


/**
 * @param {?proto.blog_article|undefined} value
 * @return {!proto.blog_detail} returns this
*/
proto.blog_detail.prototype.setPrevArticle = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blog_detail} returns this
 */
proto.blog_detail.prototype.clearPrevArticle = function() {
  return this.setPrevArticle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blog_detail.prototype.hasPrevArticle = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blog_types.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blog_types.prototype.toObject = function(opt_includeInstance) {
  return proto.blog_types.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blog_types} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog_types.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    msg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    blogTypeListList: jspb.Message.toObjectList(msg.getBlogTypeListList(),
    blogType_pb.blog_type.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blog_types}
 */
proto.blog_types.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blog_types;
  return proto.blog_types.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blog_types} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blog_types}
 */
proto.blog_types.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.error_codes} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 3:
      var value = new blogType_pb.blog_type;
      reader.readMessage(value,blogType_pb.blog_type.deserializeBinaryFromReader);
      msg.addBlogTypeList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blog_types.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blog_types.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blog_types} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog_types.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBlogTypeListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      blogType_pb.blog_type.serializeBinaryToWriter
    );
  }
};


/**
 * optional error_codes code = 1;
 * @return {!proto.error_codes}
 */
proto.blog_types.prototype.getCode = function() {
  return /** @type {!proto.error_codes} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.error_codes} value
 * @return {!proto.blog_types} returns this
 */
proto.blog_types.prototype.setCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string msg = 2;
 * @return {string}
 */
proto.blog_types.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blog_types} returns this
 */
proto.blog_types.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated blog_type blog_type_list = 3;
 * @return {!Array<!proto.blog_type>}
 */
proto.blog_types.prototype.getBlogTypeListList = function() {
  return /** @type{!Array<!proto.blog_type>} */ (
    jspb.Message.getRepeatedWrapperField(this, blogType_pb.blog_type, 3));
};


/**
 * @param {!Array<!proto.blog_type>} value
 * @return {!proto.blog_types} returns this
*/
proto.blog_types.prototype.setBlogTypeListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.blog_type=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blog_type}
 */
proto.blog_types.prototype.addBlogTypeList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.blog_type, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blog_types} returns this
 */
proto.blog_types.prototype.clearBlogTypeListList = function() {
  return this.setBlogTypeListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blog_comments.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blog_comments.prototype.toObject = function(opt_includeInstance) {
  return proto.blog_comments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blog_comments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog_comments.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    msg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    blogCommentListList: jspb.Message.toObjectList(msg.getBlogCommentListList(),
    blogComment_pb.blog_comment.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blog_comments}
 */
proto.blog_comments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blog_comments;
  return proto.blog_comments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blog_comments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blog_comments}
 */
proto.blog_comments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.error_codes} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 3:
      var value = new blogComment_pb.blog_comment;
      reader.readMessage(value,blogComment_pb.blog_comment.deserializeBinaryFromReader);
      msg.addBlogCommentList(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blog_comments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blog_comments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blog_comments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog_comments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBlogCommentListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      blogComment_pb.blog_comment.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional error_codes code = 1;
 * @return {!proto.error_codes}
 */
proto.blog_comments.prototype.getCode = function() {
  return /** @type {!proto.error_codes} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.error_codes} value
 * @return {!proto.blog_comments} returns this
 */
proto.blog_comments.prototype.setCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string msg = 2;
 * @return {string}
 */
proto.blog_comments.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blog_comments} returns this
 */
proto.blog_comments.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated blog_comment blog_comment_list = 3;
 * @return {!Array<!proto.blog_comment>}
 */
proto.blog_comments.prototype.getBlogCommentListList = function() {
  return /** @type{!Array<!proto.blog_comment>} */ (
    jspb.Message.getRepeatedWrapperField(this, blogComment_pb.blog_comment, 3));
};


/**
 * @param {!Array<!proto.blog_comment>} value
 * @return {!proto.blog_comments} returns this
*/
proto.blog_comments.prototype.setBlogCommentListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.blog_comment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blog_comment}
 */
proto.blog_comments.prototype.addBlogCommentList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.blog_comment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blog_comments} returns this
 */
proto.blog_comments.prototype.clearBlogCommentListList = function() {
  return this.setBlogCommentListList([]);
};


/**
 * optional int32 total = 4;
 * @return {number}
 */
proto.blog_comments.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.blog_comments} returns this
 */
proto.blog_comments.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.file_content.prototype.toObject = function(opt_includeInstance) {
  return proto.file_content.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.file_content} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.file_content.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    msg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    txt: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.file_content}
 */
proto.file_content.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.file_content;
  return proto.file_content.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.file_content} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.file_content}
 */
proto.file_content.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.error_codes} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.file_content.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.file_content.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.file_content} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.file_content.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTxt();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional error_codes code = 1;
 * @return {!proto.error_codes}
 */
proto.file_content.prototype.getCode = function() {
  return /** @type {!proto.error_codes} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.error_codes} value
 * @return {!proto.file_content} returns this
 */
proto.file_content.prototype.setCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string msg = 2;
 * @return {string}
 */
proto.file_content.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.file_content} returns this
 */
proto.file_content.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string txt = 3;
 * @return {string}
 */
proto.file_content.prototype.getTxt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.file_content} returns this
 */
proto.file_content.prototype.setTxt = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blog_chat_records.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blog_chat_records.prototype.toObject = function(opt_includeInstance) {
  return proto.blog_chat_records.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blog_chat_records} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog_chat_records.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    msg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    blogChatRecordListList: jspb.Message.toObjectList(msg.getBlogChatRecordListList(),
    blogChatRecord_pb.blog_chat_record.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blog_chat_records}
 */
proto.blog_chat_records.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blog_chat_records;
  return proto.blog_chat_records.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blog_chat_records} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blog_chat_records}
 */
proto.blog_chat_records.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.error_codes} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 3:
      var value = new blogChatRecord_pb.blog_chat_record;
      reader.readMessage(value,blogChatRecord_pb.blog_chat_record.deserializeBinaryFromReader);
      msg.addBlogChatRecordList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blog_chat_records.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blog_chat_records.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blog_chat_records} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog_chat_records.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBlogChatRecordListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      blogChatRecord_pb.blog_chat_record.serializeBinaryToWriter
    );
  }
};


/**
 * optional error_codes code = 1;
 * @return {!proto.error_codes}
 */
proto.blog_chat_records.prototype.getCode = function() {
  return /** @type {!proto.error_codes} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.error_codes} value
 * @return {!proto.blog_chat_records} returns this
 */
proto.blog_chat_records.prototype.setCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string msg = 2;
 * @return {string}
 */
proto.blog_chat_records.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blog_chat_records} returns this
 */
proto.blog_chat_records.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated blog_chat_record blog_chat_record_list = 3;
 * @return {!Array<!proto.blog_chat_record>}
 */
proto.blog_chat_records.prototype.getBlogChatRecordListList = function() {
  return /** @type{!Array<!proto.blog_chat_record>} */ (
    jspb.Message.getRepeatedWrapperField(this, blogChatRecord_pb.blog_chat_record, 3));
};


/**
 * @param {!Array<!proto.blog_chat_record>} value
 * @return {!proto.blog_chat_records} returns this
*/
proto.blog_chat_records.prototype.setBlogChatRecordListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.blog_chat_record=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blog_chat_record}
 */
proto.blog_chat_records.prototype.addBlogChatRecordList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.blog_chat_record, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blog_chat_records} returns this
 */
proto.blog_chat_records.prototype.clearBlogChatRecordListList = function() {
  return this.setBlogChatRecordListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blog_rooms.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blog_rooms.prototype.toObject = function(opt_includeInstance) {
  return proto.blog_rooms.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blog_rooms} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog_rooms.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    msg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    blogRoomListList: jspb.Message.toObjectList(msg.getBlogRoomListList(),
    blogArticle_pb.blog_room.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blog_rooms}
 */
proto.blog_rooms.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blog_rooms;
  return proto.blog_rooms.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blog_rooms} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blog_rooms}
 */
proto.blog_rooms.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.error_codes} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 3:
      var value = new blogArticle_pb.blog_room;
      reader.readMessage(value,blogArticle_pb.blog_room.deserializeBinaryFromReader);
      msg.addBlogRoomList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blog_rooms.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blog_rooms.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blog_rooms} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blog_rooms.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBlogRoomListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      blogArticle_pb.blog_room.serializeBinaryToWriter
    );
  }
};


/**
 * optional error_codes code = 1;
 * @return {!proto.error_codes}
 */
proto.blog_rooms.prototype.getCode = function() {
  return /** @type {!proto.error_codes} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.error_codes} value
 * @return {!proto.blog_rooms} returns this
 */
proto.blog_rooms.prototype.setCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string msg = 2;
 * @return {string}
 */
proto.blog_rooms.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blog_rooms} returns this
 */
proto.blog_rooms.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated blog_room blog_room_list = 3;
 * @return {!Array<!proto.blog_room>}
 */
proto.blog_rooms.prototype.getBlogRoomListList = function() {
  return /** @type{!Array<!proto.blog_room>} */ (
    jspb.Message.getRepeatedWrapperField(this, blogArticle_pb.blog_room, 3));
};


/**
 * @param {!Array<!proto.blog_room>} value
 * @return {!proto.blog_rooms} returns this
*/
proto.blog_rooms.prototype.setBlogRoomListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.blog_room=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blog_room}
 */
proto.blog_rooms.prototype.addBlogRoomList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.blog_room, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blog_rooms} returns this
 */
proto.blog_rooms.prototype.clearBlogRoomListList = function() {
  return this.setBlogRoomListList([]);
};


goog.object.extend(exports, proto);
